- hosts: all

  vars:
    output_dir: "{{ lookup('env','HOME') }}/files"
    output_file: "assets_discovery_out"
    csv_headers: |
        SERVER,,,,,PROCESSOR,,,,,MEMORY,,,,,,STORAGE,VIRTUALIZATION,,OS,,,,,APP SERVER,,,,DATABASE,,,
        Hostname,Domain,IPv4,Netmask,IPv6,Architecture,Processor,Processors,Cores,VCPUs,Swap,Used swap,Free swap,Mem,Used mem,Free mem,Drives,Virt type,Virt role,System,OS Family,Distribution,Release,Version,Vendor,Name,Version,Path,Vendor,Name,Version,Path

  tasks:
    - name: set fact
      set_fact: 
        asset_list: []

    - name: Fact discovery
      setup:
      register: facts

    - name: Asset discovery on Linux
      assets_discovery:
      register: linux_assets
      when: ansible_system == "Linux"

    - name: Loading Linux assets if exists
      set_fact:
        assets: "{{ linux_assets }}"
      when: ansible_system == "Linux"

    - name: Asset discovery on Windows
      win_assets_discovery:
      register: windows_assets
      when: ansible_system == "Win32NT"

    - name: Loading Windows assets if exists
      set_fact:
        assets: "{{ windows_assets }}"
      when: ansible_system == "Win32NT"

    - name: Combining facts and assets
      set_fact:
        json_out: "{{ facts|combine(assets) }}"

#    - name: Converting data from JSON to CSV
#      script: "/usr/bin/env python ./scripts/json2csv.py {{ json_out | to_json | quote }}"
#      register: csv_out
#      delegate_to: 127.0.0.1

#    - name: Checking output directory existence
#      stat: path="{{ output_dir }}"
#      register: dir_out
#      delegate_to: 127.0.0.1

    - name: Creating output directory
      file: path="{{ output_dir }}" state=directory
#      when: dir_out.stat.exists == false
      delegate_to: 127.0.0.1

    - name: JSON to CSV converter and exporter
      script: "/usr/bin/env python ./scripts/json2csv.py {{ json_out | to_json | quote }} {{ output_dir }}/{{ output_file }}"
      register: csv_out
      delegate_to: 127.0.0.1

#    - name: Checking JSON file existence
#      stat: path="{{ output_dir  }}/{{ output_file }}.json"
#      register: json_path
#      delegate_to: 127.0.0.1

#    - name: Creating output JSON file
#      file: path="{{ output_dir  }}/{{ output_file }}.json" state=touch
#      when: json_path.stat.exists == false
#      delegate_to: 127.0.0.1

#    - name: Writing data to JSON file
#      lineinfile: dest="{{ output_dir  }}/{{ output_file }}.json"
#        regexp='^'
#        insertafter=EOF
#        line="{{ json_out }}"
#        state=present
#        create=True
#      delegate_to: 127.0.0.1

#    - name: Checking CSV file existence
#      stat: path="{{ output_dir  }}/{{ output_file }}.csv"
#      register: csv_path
#      delegate_to: 127.0.0.1

#    - name: Creating output CSV file
#      file: path="{{ output_dir  }}/{{ output_file }}.csv" state=touch
#      when: csv_path.stat.exists == false
#      delegate_to: 127.0.0.1

#    - name: Writing headers to CSV file
#      lineinfile: dest="{{ output_dir  }}/{{ output_file }}.csv"
#        regexp=''
#        insertafter=EOF
#        line="{{ csv_headers }}"
#      when: csv_path.stat.exists == false
#      delegate_to: 127.0.0.1

#    - name: Writing data to CSV file
#      lineinfile: dest="{{ output_dir  }}/{{ output_file }}.csv"
#        regexp=''
#        insertafter=EOF
#        line="{{ csv_out.stdout }}"
#      delegate_to: 127.0.0.1

    - name: JSON objects
      debug:
        var: json_out

    - name: CSV records
      debug:
        var: csv_out.stdout
